// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: User.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - UserRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface UserRoot : GPBRootObject
@end

#pragma mark - User

typedef GPB_ENUM(User_FieldNumber) {
  User_FieldNumber_UserId = 1,
  User_FieldNumber_Nick = 2,
  User_FieldNumber_Avatar = 3,
  User_FieldNumber_Balance = 4,
  User_FieldNumber_Password = 7,
  User_FieldNumber_Email = 8,
  User_FieldNumber_Mobile = 9,
  User_FieldNumber_QqOpenId = 10,
  User_FieldNumber_SinaId = 11,
  User_FieldNumber_WeixinId = 12,
};

@interface User : GPBMessage

/// 用户ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;
/// Test to see if @c userId has been set.
@property(nonatomic, readwrite) BOOL hasUserId;

/// 用户昵称
@property(nonatomic, readwrite, copy, null_resettable) NSString *nick;
/// Test to see if @c nick has been set.
@property(nonatomic, readwrite) BOOL hasNick;

/// 用户头像
@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;
/// Test to see if @c avatar has been set.
@property(nonatomic, readwrite) BOOL hasAvatar;

///余额
@property(nonatomic, readwrite) float balance;

@property(nonatomic, readwrite) BOOL hasBalance;
@property(nonatomic, readwrite, copy, null_resettable) NSString *password;
/// Test to see if @c password has been set.
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite, copy, null_resettable) NSString *email;
/// Test to see if @c email has been set.
@property(nonatomic, readwrite) BOOL hasEmail;

/// 手机号码
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;
/// Test to see if @c mobile has been set.
@property(nonatomic, readwrite) BOOL hasMobile;

/// QQ ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *qqOpenId;
/// Test to see if @c qqOpenId has been set.
@property(nonatomic, readwrite) BOOL hasQqOpenId;

/// SINA UserID
@property(nonatomic, readwrite, copy, null_resettable) NSString *sinaId;
/// Test to see if @c sinaId has been set.
@property(nonatomic, readwrite) BOOL hasSinaId;

/// WeChat UserID
@property(nonatomic, readwrite, copy, null_resettable) NSString *weixinId;
/// Test to see if @c weixinId has been set.
@property(nonatomic, readwrite) BOOL hasWeixinId;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
